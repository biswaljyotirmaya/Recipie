package com.jb.entity;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import jakarta.persistence.AttributeConverter;
import jakarta.persistence.Converter;

import java.util.HashMap;
import java.util.Map;

@Converter
public class NutrientsConverter implements AttributeConverter<Map<String, String>, String> {
	private final ObjectMapper objectMapper = new ObjectMapper();

	@Override
	public String convertToDatabaseColumn(Map<String, String> attribute) {
		if (attribute == null || attribute.isEmpty()) {
			return "{}"; // Store empty JSON object for null/empty maps
		}
		try {
			return objectMapper.writeValueAsString(attribute);
		} catch (JsonProcessingException e) {
			throw new RuntimeException("Failed to convert nutrients to JSON", e);
		}
	}

	@Override
	public Map<String, String> convertToEntityAttribute(String dbData) {
		if (dbData == null || dbData.isEmpty() || dbData.equals("{}")) {
			return new HashMap<>();
		}
		try {
			return objectMapper.readValue(dbData, new TypeReference<Map<String, String>>() {
			});
		} catch (JsonProcessingException e) {
			return new HashMap<>();
		}
	}
}